name: DEV CI/CD

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  workflow_dispatch:

jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/api:latest-dev

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Deploy on DEV server
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ secrets.WEBHOOK_DEV_SERVER_URL }}
          method: POST
          username: ${{ secrets.DEV_CRED_USER }}
          password: ${{ secrets.DEV_CRED_PWD }}

  QA-Analysis:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - name: Build with Maven
        run: |
          mvn clean test package
      - name: Depcheck - HTML
        uses: dependency-check/Dependency-Check_Action@main
        id: DepcheckHTML
        with:
          project: 'sweetiez-api'
          path: '.'
          format: 'HTML'
          args: >
            --failOnCVSS 7
            --enableRetired
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
          name: Dependency-Check-Report
          path: ${{github.workspace}}/target/dependency-check-report

      #      - uses: actions/cache@v1
      #        with:
      #          path: ~/.m2/repository
      #          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      #          restore-keys: |
      #            ${{ runner.os }}-maven-

      #      - name: Build with Maven
      #        run: mvn -B verify spotbugs:spotbugs
      #      - uses: jwgmeligmeyling/spotbugs-github-action@master
      #        with:
      #          path: '**/spotbugsXml.xml'
      #      - name: PMD
      #        run: mvn -B verify pmd:pmd
      #      - uses: jwgmeligmeyling/pmd-github-action@master
      #        with:
      #          path: '**/pmd.xml'
      #      - name: Checkstyle
      #        run: mvn -B verify checkstyle:checkstyle
      #      - uses: jwgmeligmeyling/checkstyle-github-action@master
      #        with:
      #          path: '**/checkstyle-result.xml'

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
